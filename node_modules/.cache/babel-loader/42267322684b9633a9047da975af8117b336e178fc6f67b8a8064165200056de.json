{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7dc58a0a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"notification-page\"\n};\nconst _hoisted_2 = {\n  class: \"props-table\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"td\", null, \"variant\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_notification_component = _resolveComponent(\"notification-component\");\n  const _component_select_component = _resolveComponent(\"select-component\");\n  const _component_prism_component = _resolveComponent(\"prism-component\");\n  const _component_table_component = _resolveComponent(\"table-component\");\n  const _component_ShowcaseComponent = _resolveComponent(\"ShowcaseComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ShowcaseComponent, null, {\n    component: _withCtx(() => [_createVNode(_component_notification_component, {\n      variant: $options.computedRounded\n    }, null, 8 /* PROPS */, [\"variant\"])]),\n    controls: _withCtx(() => [_createElementVNode(\"table\", _hoisted_2, [_createElementVNode(\"tr\", null, [_hoisted_3, _createElementVNode(\"td\", null, [_createVNode(_component_select_component, {\n      state: $options.computedVariant,\n      onSelected: $options.variantChanged,\n      data: $data.variantOptions,\n      defaults: \"default\"\n    }, null, 8 /* PROPS */, [\"state\", \"onSelected\", \"data\"])])])])]),\n    code: _withCtx(() => [_createVNode(_component_prism_component, {\n      code: $data.code,\n      nameOfFile: \"AccordionComponent.vue\"\n    }, null, 8 /* PROPS */, [\"code\"])]),\n    docs: _withCtx(() => [_createVNode(_component_table_component, {\n      headings: $data.propHeadings,\n      items: $data.propDetails\n    }, null, 8 /* PROPS */, [\"headings\", \"items\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_ShowcaseComponent","component","_withCtx","_component_notification_component","variant","$options","computedRounded","controls","_hoisted_2","_hoisted_3","_component_select_component","state","computedVariant","onSelected","variantChanged","data","$data","variantOptions","defaults","code","_component_prism_component","nameOfFile","docs","_component_table_component","headings","propHeadings","items","propDetails"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/views/Interface/NotificationPage.vue"],"sourcesContent":["<template>\n  <div class=\"notification-page\">\n    <ShowcaseComponent>\n      <template v-slot:component>\n        <notification-component :variant=\"computedRounded\" />\n      </template>\n      <template v-slot:controls>\n        <table class=\"props-table\">\n          <tr>\n            <td>variant</td>\n            <td>\n              <select-component\n                :state=\"computedVariant\"\n                @selected=\"variantChanged\"\n                :data=\"variantOptions\"\n                defaults=\"default\"\n              />\n            </td>\n            </tr>\n        </table>\n      </template>\n      <template v-slot:code>\n        <prism-component :code=\"code\" nameOfFile=\"AccordionComponent.vue\" />\n      </template>\n      <template v-slot:docs>\n        <table-component :headings=\"propHeadings\" :items=\"propDetails\" />\n      </template>\n    </ShowcaseComponent>\n  </div>\n</template>\n\n<script>\nimport NotificationComponent from \"@/components/Vue-UI/NotificationComponent\";\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport * as AccordionComponentMarkdown from \"@/assets/ComponentMarkdown/AccordionComponentMarkdown\";\n\nexport default {\n  components: {\n    ShowcaseComponent,\n    PrismComponent,\n    TableComponent,\n    NotificationComponent,\n    SelectComponent,\n  },\n  data() {\n    return {\n      variant: \"info\",\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      focusTextArea: false,\n      autoClose: false,\n      rounded: false,\n      items: [\n        {\n          title: \"What is the answer to life, the universe and everything?\",\n          content: \"42\",\n        },\n        {\n          title: \" How do you catch a squirrel?\",\n          content: \"Climb a tree and act like a nut!\",\n        },\n        {\n          title: \"What do you call a snowman with a six-pack?\",\n          content: \"An abdominal snowman!\",\n        },\n      ],\n      code: AccordionComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [\n        [\n          \"autoClose\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"If true, the accordion will automatically close previous tabs\",\n        ],\n        [\n          \"rounded\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Will round the top and bottom items giving it a rounded look\",\n        ],\n        [\n          \"items\",\n          \"Array\",\n          \"[{title: 'Some question', content: 'some answer'}]\",\n          \"Yes\",\n          \"The content of your accordion\",\n        ],\n      ],\n    };\n  },\n  methods: {\n    variantChanged(item) {\n      return (this.variant = item);\n    },\n    autoCloseChanged() {\n      this.autoClose = !this.autoClose;\n    },\n    roundedChanged() {\n      this.rounded = !this.rounded;\n    },\n    itemsChanged(item) {\n      if (item.target.value || item.target.value === \"\") {\n        this.items = JSON.parse(item.target.value);\n      }\n    },\n  },\n  computed: {\n    computedVariant() {\n      return this.variant;\n    },\n    computedAutoClose() {\n      return this.autoClose;\n    },\n    computedRounded() {\n      return this.rounded;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n.notification-page {\n  padding-top: 3rem;\n\n  .props-table {\n    td {\n      padding: 0 5px;\n    }\n    .divider {\n      width: 50px;\n      height: 100%;\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: -2px;\n        transform: translateX(-50%);\n        left: 50%;\n        width: 2px;\n        height: calc(100% + 4px);\n        background: grey;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAmB;;EAMjBA,KAAK,EAAC;AAAa;gEAEtBC,mBAAA,CAAgB,YAAZ,SAAO;;;;;;;;uBARrBC,mBAAA,CA2BM,OA3BNC,UA2BM,GA1BJC,YAAA,CAyBoBC,4BAAA;IAxBDC,SAAS,EAAAC,QAAA,CACxB,MAAqD,CAArDH,YAAA,CAAqDI,iCAAA;MAA5BC,OAAO,EAAEC,QAAA,CAAAC;IAAe,qC;IAElCC,QAAQ,EAAAL,QAAA,CACvB,MAYQ,CAZRN,mBAAA,CAYQ,SAZRY,UAYQ,GAXNZ,mBAAA,CAUO,aATLa,UAAgB,EAChBb,mBAAA,CAOK,aANHG,YAAA,CAKEW,2BAAA;MAJCC,KAAK,EAAEN,QAAA,CAAAO,eAAe;MACtBC,UAAQ,EAAER,QAAA,CAAAS,cAAc;MACxBC,IAAI,EAAEC,KAAA,CAAAC,cAAc;MACrBC,QAAQ,EAAC;;IAMFC,IAAI,EAAAjB,QAAA,CACnB,MAAoE,CAApEH,YAAA,CAAoEqB,0BAAA;MAAlDD,IAAI,EAAEH,KAAA,CAAAG,IAAI;MAAEE,UAAU,EAAC;;IAE1BC,IAAI,EAAApB,QAAA,CACnB,MAAiE,CAAjEH,YAAA,CAAiEwB,0BAAA;MAA/CC,QAAQ,EAAER,KAAA,CAAAS,YAAY;MAAGC,KAAK,EAAEV,KAAA,CAAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}