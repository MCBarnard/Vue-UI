{"ast":null,"code":"import { normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"DropdownRef\",\n  class: /*#__PURE__*/_normalizeClass(['dropdown'])\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, \"component\", 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","class","_normalizeClass","_createElementBlock","_hoisted_1"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/DropdownComponent.vue"],"sourcesContent":["<template>\n  <div ref=\"DropdownRef\" :class=\"['dropdown']\">component</div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      active: false,\n    };\n  },\n  props: {\n    items: Array,\n  },\n  mounted() {\n    window.addEventListener(\"click\", this.listener);\n  },\n  unmounted() {\n    window.removeEventListener(\"click\", this.listener);\n  },\n  methods: {\n    clickedOutsideOfRef(clickedElement, targetRef, callback) {\n      if (\n        !(\n          clickedElement.target === targetRef ||\n          clickedElement.composedPath().includes(targetRef)\n        )\n      ) {\n        callback();\n      }\n    },\n    listener(event) {\n      this.clickedOutsideOfRef(\n        event,\n        this.$refs.DropdownRef,\n        () => (this.active = false)\n      );\n    },\n    dropdownClicked() {\n      this.active = !this.active;\n    },\n    isActiveItem(item) {\n      return !!(item && item.value === this.selected);\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n\n</style>\n"],"mappings":";;EACOA,GAAG,EAAC,aAAa;EAAEC,KAAK,eAAAC,eAAA,CAAE,YAAY;;;uBAA3CC,mBAAA,CAA4D,OAA5DC,UAA4D,EAAf,WAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}