{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\";\nconst _hoisted_1 = {\n  class: \"outer\"\n};\nconst _hoisted_2 = {\n  class: \"inner\"\n};\nconst _hoisted_3 = {\n  id: \"number\"\n};\nconst _hoisted_4 = [\"width\", \"height\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"defs\", null, [/*#__PURE__*/_createElementVNode(\"linearGradient\", {\n  id: \"GradientColor\"\n}, [/*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"0%\",\n  \"stop-color\": \"#e91e63\"\n}), /*#__PURE__*/_createElementVNode(\"stop\", {\n  offset: \"100%\",\n  \"stop-color\": \"#673ab7\"\n})])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"stroke-linecap\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"skill\",\n    style: _normalizeStyle(`--total-skill: ${$data.percentage}`)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, _toDisplayString($data.counter), 1 /* TEXT */)])]), (_openBlock(), _createElementBlock(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\",\n    width: _ctx.width,\n    height: _ctx.height\n  }, [_hoisted_5, _createElementVNode(\"circle\", {\n    cx: \"80\",\n    cy: \"80\",\n    r: \"70\",\n    \"stroke-linecap\": $options.capShape\n  }, null, 8 /* PROPS */, _hoisted_6)], 8 /* PROPS */, _hoisted_4))], 4 /* STYLE */);\n}","map":{"version":3,"names":["class","id","_createElementVNode","offset","_createElementBlock","style","_normalizeStyle","$data","percentage","_hoisted_1","_hoisted_2","_hoisted_3","_toDisplayString","counter","xmlns","version","width","_ctx","height","_hoisted_5","cx","cy","r","$options","capShape"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/CircularProgressComponent.vue"],"sourcesContent":["<template>\n  <div class=\"skill\" :style=\"`--total-skill: ${percentage}`\">\n    <div class=\"outer\">\n      <div class=\"inner\">\n        <div id=\"number\">{{ counter }}</div>\n      </div>\n    </div>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      :width=\"width\"\n      :height=\"height\"\n    >\n      <defs>\n        <linearGradient id=\"GradientColor\">\n          <stop offset=\"0%\" stop-color=\"#e91e63\" />\n          <stop offset=\"100%\" stop-color=\"#673ab7\" />\n        </linearGradient>\n      </defs>\n      <circle cx=\"80\" cy=\"80\" r=\"70\" :stroke-linecap=\"capShape\" />\n    </svg>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      interval: setInterval(() => {}),\n      counter: 0,\n      percentage: 0,\n    };\n  },\n  props: {\n    variant: String, // '' / info / success / warning / danger\n    rounded: Boolean, // true / false\n    gradient: Boolean, // true / false\n  },\n  computed: {\n    capShape() {\n      return this.rounded ? \"round\" : \"square\";\n    },\n    computedStartColor() {\n      // default gradient: #e91e63 -> #673ab7\n      return this.variant ? \"round\" : \"square\";\n    },\n  },\n  mounted() {\n    setTimeout(() => {\n      this.animateProgress(78);\n    }, 100);\n  },\n  methods: {\n    animateProgress(total) {\n      this.percentage = total;\n      clearInterval(this.interval);\n      this.interval = setInterval(() => {\n        if (this.counter > this.percentage) {\n          this.counter--;\n        } else if (this.counter < this.percentage) {\n          this.counter++;\n        } else {\n          clearInterval(this.interval);\n        }\n        if (this.counter > 100) clearInterval(this.interval);\n      }, 20);\n    },\n  },\n};\n</script>\n\n<style>\n.skill {\n  width: 160px;\n  height: 160px;\n  border-radius: 50%;\n  position: relative;\n}\n\n.outer {\n  height: 160px;\n  width: 160px;\n  border-radius: 50%;\n  padding: 20px;\n  position: relative;\n  box-shadow: 6px 6px 10px -1px rgba(0, 0, 0, 0.15),\n    -6px -6px 10px -1px rgba(255, 255, 255, 0.7);\n}\n\n.inner {\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  box-shadow: inset 4px 4px 6px -1px rgba(0, 0, 0, 0.2),\n    inset -4px -4px 6px -1px rgba(255, 255, 255, 0.7),\n    -0.5px -0.5px 0px rgba(255, 255, 255, 1),\n    0.5px 0.5px 0px rgba(0, 0, 0, 0.15), 0px 12px 10px -10px rgba(0, 0, 0, 0.05);\n}\n\n#number {\n  font-weight: 600;\n  color: #555;\n}\n\ncircle {\n  fill: none;\n  stroke: url(#GradientColor);\n  stroke-width: 20px;\n  stroke-dasharray: 440;\n  stroke-dashoffset: calc(440 - (440 * var(--total-skill) / 100));\n  transition: all 2s;\n}\n\nsvg {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: all 2s;\n}\n</style>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAO;;EACXA,KAAK,EAAC;AAAO;;EACXC,EAAE,EAAC;AAAQ;;gCASlBC,mBAAA,CAKO,e,aAJLA,mBAAA,CAGiB;EAHDD,EAAE,EAAC;AAAe,I,aAChCC,mBAAA,CAAyC;EAAnCC,MAAM,EAAC,IAAI;EAAC,YAAU,EAAC;iBAC7BD,mBAAA,CAA2C;EAArCC,MAAM,EAAC,MAAM;EAAC,YAAU,EAAC;;;;uBAfvCC,mBAAA,CAoBM;IApBDJ,KAAK,EAAC,OAAO;IAAEK,KAAK,EAAAC,eAAA,mBAAoBC,KAAA,CAAAC,UAAU;MACrDN,mBAAA,CAIM,OAJNO,UAIM,GAHJP,mBAAA,CAEM,OAFNQ,UAEM,GADJR,mBAAA,CAAoC,OAApCS,UAAoC,EAAAC,gBAAA,CAAhBL,KAAA,CAAAM,OAAO,iB,oBAG/BT,mBAAA,CAaM;IAZJU,KAAK,EAAC,4BAA4B;IAClCC,OAAO,EAAC,KAAK;IACZC,KAAK,EAAEC,IAAA,CAAAD,KAAK;IACZE,MAAM,EAAED,IAAA,CAAAC;MAETC,UAKO,EACPjB,mBAAA,CAA4D;IAApDkB,EAAE,EAAC,IAAI;IAACC,EAAE,EAAC,IAAI;IAACC,CAAC,EAAC,IAAI;IAAE,gBAAc,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}