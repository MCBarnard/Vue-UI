{"ast":null,"code":"export default `<template>\n<div\n  :class=\"['skill', { showTrack }]\"\n  :style=\"\\`--total-skill: \\${computedPercentage}; --circumference: \\${computedCircumference};--box:\\${computedBoxSize}px;--border-size: \\${computedBorder}px\\`\"\n>\n  <div class=\"outer\">\n    <div class=\"inner\">\n      <div id=\"number\" v-if=\"!hideValue\" :class=\"[{ bold }, size]\">\n        {{ counter }}%\n      </div>\n    </div>\n  </div>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\"\n    :width=\"\\`\\${computedBoxSize}px\\`\"\n    :height=\"\\`\\${computedBoxSize}px\\`\"\n  >\n    <defs>\n      <linearGradient id=\"GradientColor\">\n        <stop offset=\"0%\" :stop-color=\"computedStartColor\" />\n        <stop offset=\"100%\" :stop-color=\"computedEndColor\" />\n      </linearGradient>\n    </defs>\n    <circle\n      :cx=\"computedRadius + computedBorder / 2\"\n      :cy=\"computedRadius + computedBorder / 2\"\n      :r=\"computedRadius\"\n      :stroke-linecap=\"capShape\"\n    />\n  </svg>\n</div>\n</template>\n\n<script>\nexport default {\ndata() {\n  return {\n    interval: setInterval(() => {}),\n    counter: 0,\n    percentage: 0,\n  };\n},\nprops: {\n  variant: String, // '' / info / success / warning / danger\n  rounded: Boolean, // true / false\n  gradient: Boolean, // true / false\n  value: Number, // 78\n  showTrack: Boolean, // true / false\n  size: String, // small, medium, large\n  bold: Boolean, // true, false\n  hideValue: Boolean, // true, false\n},\ncomputed: {\n  computedPercentage() {\n    return this.percentage < 100 ? this.percentage : 100;\n  },\n  computedBoxSize() {\n    return this.computedRadius * 2 + this.computedBorder;\n  },\n  computedCircumference() {\n    switch (this.size) {\n      case \"small\":\n        return 157.08;\n      case \"medium\":\n        return 219.91;\n      case \"large\":\n        return 345.58;\n      case \"extra-large\":\n        return 502.65;\n      default:\n        return 219.91;\n    }\n  },\n  computedRadius() {\n    switch (this.size) {\n      case \"small\":\n        return 25;\n      case \"medium\":\n        return 35;\n      case \"large\":\n        return 55;\n      case \"extra-large\":\n        return 80;\n      default:\n        return 35;\n    }\n  },\n  computedBorder() {\n    switch (this.size) {\n      case \"small\":\n        return 10;\n      case \"medium\":\n        return 15;\n      case \"large\":\n        return 20;\n      case \"extra-large\":\n        return 25;\n      default:\n        return 15;\n    }\n  },\n  capShape() {\n    return this.rounded ? \"round\" : \"square\";\n  },\n  computedStartColor() {\n    if (this.gradient && !this.variant) {\n      return \"#f900ff\";\n    } else if (!this.gradient && !this.variant) {\n      return \"#ce00ff\";\n    } else if (!this.gradient && this.variant === \"info\") {\n      return \"#218afa\";\n    } else if (this.gradient && this.variant === \"info\") {\n      return \"#00a6eb\";\n    } else if (!this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (this.gradient && this.variant === \"success\") {\n      return \"#00ff19\";\n    } else if (!this.gradient && this.variant === \"warning\") {\n      return \"#ff6300\";\n    } else if (this.gradient && this.variant === \"warning\") {\n      return \"#ff9d00\";\n    } else if (!this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    } else if (this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    }\n    return \"#a900ff\";\n  },\n  computedEndColor() {\n    if (this.gradient && !this.variant) {\n      return \"#673ab7\";\n    } else if (!this.gradient && !this.variant) {\n      return \"#ce00ff\";\n    } else if (!this.gradient && this.variant === \"info\") {\n      return \"#218afa\";\n    } else if (this.gradient && this.variant === \"info\") {\n      return \"#1046cf\";\n    } else if (!this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (!this.gradient && this.variant === \"warning\") {\n      return \"#ff6300\";\n    } else if (this.gradient && this.variant === \"warning\") {\n      return \"#e20404\";\n    } else if (!this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    } else if (this.gradient && this.variant === \"danger\") {\n      return \"#aa0625\";\n    }\n    return \"#a900ff\";\n  },\n},\nmethods: {\n  triggerAnimation() {\n    setTimeout(() => {\n      this.animateProgress(this.value);\n    }, 100);\n  },\n  animateProgress(total) {\n    this.percentage = total;\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.counter > this.computedPercentage) {\n        this.counter--;\n      } else if (this.counter < this.computedPercentage) {\n        this.counter++;\n      } else {\n        clearInterval(this.interval);\n      }\n      if (this.counter > 100) clearInterval(this.interval);\n    }, 20);\n  },\n},\nwatch: {\n  value() {\n    this.triggerAnimation();\n  },\n},\n};\n</script>\n\n<style scoped lang=\"scss\">\n.skill {\nwidth: var(--box);\nheight: var(--box);\nborder-radius: 50%;\nposition: relative;\nborder: 1px solid transparent;\n\n&.showTrack {\n  border: 1px solid #f1f1f1;\n  background: #f1f1f1;\n  border-radius: 50%;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(calc(-50% + 1px), calc(-50% + 1px));\n    border: 1px solid #f1f1f1;\n    width: calc(var(--box) - var(--border-size) * 2);\n    height: calc(var(--box) - var(--border-size) * 2);\n    border-radius: 50%;\n    background: #fff;\n  }\n}\n}\n\n.outer {\nheight: var(--box);\nwidth: var(--box);\nborder-radius: 50%;\nposition: relative;\n}\n\n.inner {\nheight: 100%;\nwidth: 100%;\nborder-radius: 50%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nposition: relative;\nz-index: 2;\n}\n\n#number {\ncolor: #555;\n\n&.bold {\n  font-weight: bold;\n}\n\n&.small {\n  font-size: 12px;\n}\n\n&.medium {\n  font-size: 16px;\n}\n\n&.large {\n  font-size: 20px;\n}\n\n&.extra-large {\n  font-size: 26px;\n}\n}\n\ncircle {\nfill: none;\nstroke: url(#GradientColor);\nstroke-width: var(--border-size);\nstroke-dasharray: var(--circumference);\nstroke-dashoffset: calc(\n  var(--circumference) - (var(--circumference) * var(--total-skill) / 100)\n);\ntransition: all 2s;\n}\n\nsvg {\nposition: absolute;\ntop: 0;\nleft: 0;\ntransition: all 2s;\n}\n</style>\n`;","map":{"version":3,"names":[],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/assets/ComponentMarkdown/CircularProgressComponentMarkdown.js"],"sourcesContent":["export default `<template>\n<div\n  :class=\"['skill', { showTrack }]\"\n  :style=\"\\`--total-skill: \\${computedPercentage}; --circumference: \\${computedCircumference};--box:\\${computedBoxSize}px;--border-size: \\${computedBorder}px\\`\"\n>\n  <div class=\"outer\">\n    <div class=\"inner\">\n      <div id=\"number\" v-if=\"!hideValue\" :class=\"[{ bold }, size]\">\n        {{ counter }}%\n      </div>\n    </div>\n  </div>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    version=\"1.1\"\n    :width=\"\\`\\${computedBoxSize}px\\`\"\n    :height=\"\\`\\${computedBoxSize}px\\`\"\n  >\n    <defs>\n      <linearGradient id=\"GradientColor\">\n        <stop offset=\"0%\" :stop-color=\"computedStartColor\" />\n        <stop offset=\"100%\" :stop-color=\"computedEndColor\" />\n      </linearGradient>\n    </defs>\n    <circle\n      :cx=\"computedRadius + computedBorder / 2\"\n      :cy=\"computedRadius + computedBorder / 2\"\n      :r=\"computedRadius\"\n      :stroke-linecap=\"capShape\"\n    />\n  </svg>\n</div>\n</template>\n\n<script>\nexport default {\ndata() {\n  return {\n    interval: setInterval(() => {}),\n    counter: 0,\n    percentage: 0,\n  };\n},\nprops: {\n  variant: String, // '' / info / success / warning / danger\n  rounded: Boolean, // true / false\n  gradient: Boolean, // true / false\n  value: Number, // 78\n  showTrack: Boolean, // true / false\n  size: String, // small, medium, large\n  bold: Boolean, // true, false\n  hideValue: Boolean, // true, false\n},\ncomputed: {\n  computedPercentage() {\n    return this.percentage < 100 ? this.percentage : 100;\n  },\n  computedBoxSize() {\n    return this.computedRadius * 2 + this.computedBorder;\n  },\n  computedCircumference() {\n    switch (this.size) {\n      case \"small\":\n        return 157.08;\n      case \"medium\":\n        return 219.91;\n      case \"large\":\n        return 345.58;\n      case \"extra-large\":\n        return 502.65;\n      default:\n        return 219.91;\n    }\n  },\n  computedRadius() {\n    switch (this.size) {\n      case \"small\":\n        return 25;\n      case \"medium\":\n        return 35;\n      case \"large\":\n        return 55;\n      case \"extra-large\":\n        return 80;\n      default:\n        return 35;\n    }\n  },\n  computedBorder() {\n    switch (this.size) {\n      case \"small\":\n        return 10;\n      case \"medium\":\n        return 15;\n      case \"large\":\n        return 20;\n      case \"extra-large\":\n        return 25;\n      default:\n        return 15;\n    }\n  },\n  capShape() {\n    return this.rounded ? \"round\" : \"square\";\n  },\n  computedStartColor() {\n    if (this.gradient && !this.variant) {\n      return \"#f900ff\";\n    } else if (!this.gradient && !this.variant) {\n      return \"#ce00ff\";\n    } else if (!this.gradient && this.variant === \"info\") {\n      return \"#218afa\";\n    } else if (this.gradient && this.variant === \"info\") {\n      return \"#00a6eb\";\n    } else if (!this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (this.gradient && this.variant === \"success\") {\n      return \"#00ff19\";\n    } else if (!this.gradient && this.variant === \"warning\") {\n      return \"#ff6300\";\n    } else if (this.gradient && this.variant === \"warning\") {\n      return \"#ff9d00\";\n    } else if (!this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    } else if (this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    }\n    return \"#a900ff\";\n  },\n  computedEndColor() {\n    if (this.gradient && !this.variant) {\n      return \"#673ab7\";\n    } else if (!this.gradient && !this.variant) {\n      return \"#ce00ff\";\n    } else if (!this.gradient && this.variant === \"info\") {\n      return \"#218afa\";\n    } else if (this.gradient && this.variant === \"info\") {\n      return \"#1046cf\";\n    } else if (!this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (this.gradient && this.variant === \"success\") {\n      return \"#00b014\";\n    } else if (!this.gradient && this.variant === \"warning\") {\n      return \"#ff6300\";\n    } else if (this.gradient && this.variant === \"warning\") {\n      return \"#e20404\";\n    } else if (!this.gradient && this.variant === \"danger\") {\n      return \"#ff0000\";\n    } else if (this.gradient && this.variant === \"danger\") {\n      return \"#aa0625\";\n    }\n    return \"#a900ff\";\n  },\n},\nmethods: {\n  triggerAnimation() {\n    setTimeout(() => {\n      this.animateProgress(this.value);\n    }, 100);\n  },\n  animateProgress(total) {\n    this.percentage = total;\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      if (this.counter > this.computedPercentage) {\n        this.counter--;\n      } else if (this.counter < this.computedPercentage) {\n        this.counter++;\n      } else {\n        clearInterval(this.interval);\n      }\n      if (this.counter > 100) clearInterval(this.interval);\n    }, 20);\n  },\n},\nwatch: {\n  value() {\n    this.triggerAnimation();\n  },\n},\n};\n</script>\n\n<style scoped lang=\"scss\">\n.skill {\nwidth: var(--box);\nheight: var(--box);\nborder-radius: 50%;\nposition: relative;\nborder: 1px solid transparent;\n\n&.showTrack {\n  border: 1px solid #f1f1f1;\n  background: #f1f1f1;\n  border-radius: 50%;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(calc(-50% + 1px), calc(-50% + 1px));\n    border: 1px solid #f1f1f1;\n    width: calc(var(--box) - var(--border-size) * 2);\n    height: calc(var(--box) - var(--border-size) * 2);\n    border-radius: 50%;\n    background: #fff;\n  }\n}\n}\n\n.outer {\nheight: var(--box);\nwidth: var(--box);\nborder-radius: 50%;\nposition: relative;\n}\n\n.inner {\nheight: 100%;\nwidth: 100%;\nborder-radius: 50%;\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nposition: relative;\nz-index: 2;\n}\n\n#number {\ncolor: #555;\n\n&.bold {\n  font-weight: bold;\n}\n\n&.small {\n  font-size: 12px;\n}\n\n&.medium {\n  font-size: 16px;\n}\n\n&.large {\n  font-size: 20px;\n}\n\n&.extra-large {\n  font-size: 26px;\n}\n}\n\ncircle {\nfill: none;\nstroke: url(#GradientColor);\nstroke-width: var(--border-size);\nstroke-dasharray: var(--circumference);\nstroke-dashoffset: calc(\n  var(--circumference) - (var(--circumference) * var(--total-skill) / 100)\n);\ntransition: all 2s;\n}\n\nsvg {\nposition: absolute;\ntop: 0;\nleft: 0;\ntransition: all 2s;\n}\n</style>\n`;\n"],"mappings":"AAAA,eAAgB;AACh},"metadata":{},"sourceType":"module","externalDependencies":[]}