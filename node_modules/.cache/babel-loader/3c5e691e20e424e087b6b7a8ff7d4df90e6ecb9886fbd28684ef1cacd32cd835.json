{"ast":null,"code":"import ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport CircularProgressComponent from \"@/components/Vue-UI/CircularProgressComponent\";\nimport VueUIButtonComponent from \"@/components/Vue-UI/ButtonComponent\";\nimport InputComponent from \"@/components/Controls/InputComponent\";\nimport * as CircularProgressComponentMarkdown from \"@/assets/ComponentMarkdown/CircularProgressComponentMarkdown\";\nexport default {\n  components: {\n    ShowcaseComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    SelectComponent,\n    CircularProgressComponent,\n    VueUIButtonComponent,\n    InputComponent\n  },\n  data() {\n    return {\n      progressValue: 78,\n      fontSize: \"small\",\n      rounded: true,\n      gradient: true,\n      bordered: false,\n      variant: \"\",\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      sizeOptions: [\"small\", \"medium\", \"large\"],\n      code: CircularProgressComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [[\"autoClose\", \"Boolean\", \"true\", \"No\", \"If true, the accordion will automatically close previous tabs\"], [\"rounded\", \"Boolean\", \"true\", \"No\", \"Will round the top and bottom items giving it a rounded look\"]]\n    };\n  },\n  methods: {\n    progressValueChanged(item) {\n      if (item.target.value || item.target.value === \"\") {\n        this.progressValue = item.target.value;\n      }\n    },\n    triggerProgressAnimation() {\n      this.$refs.circulatProgress.triggerAnimation();\n    },\n    roundedChanged() {\n      this.rounded = !this.rounded;\n    },\n    variantChanged(item) {\n      this.variant = item;\n    },\n    gradientChanged() {\n      this.gradient = !this.gradient;\n    },\n    borderedChanged() {\n      this.bordered = !this.bordered;\n    }\n  },\n  computed: {\n    computedProgressValue() {\n      return this.progressValue;\n    },\n    computedRounded() {\n      return this.rounded;\n    },\n    computedVariant() {\n      return this.variant;\n    },\n    computedGradient() {\n      return this.gradient;\n    },\n    computedBordered() {\n      return this.bordered;\n    }\n  }\n};","map":{"version":3,"names":["ShowcaseComponent","ToggleComponent","PrismComponent","TableComponent","SelectComponent","CircularProgressComponent","VueUIButtonComponent","InputComponent","CircularProgressComponentMarkdown","components","data","progressValue","fontSize","rounded","gradient","bordered","variant","variantOptions","sizeOptions","code","default","propHeadings","propDetails","methods","progressValueChanged","item","target","value","triggerProgressAnimation","$refs","circulatProgress","triggerAnimation","roundedChanged","variantChanged","gradientChanged","borderedChanged","computed","computedProgressValue","computedRounded","computedVariant","computedGradient","computedBordered"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/views/Interface/CircularProgressPage.vue"],"sourcesContent":["<template>\n  <div class=\"circular-progress-page\">\n    <ShowcaseComponent>\n      <template v-slot:component>\n        <circular-progress-component\n          :rounded=\"computedRounded\"\n          height=\"160px\"\n          width=\"160px\"\n          :gradient=\"gradient\"\n          :variant=\"variant\"\n          :value=\"computedProgressValue\"\n          ref=\"circulatProgress\"\n          :bordered=\"computedBordered\"\n        />\n      </template>\n      <template v-slot:controls>\n        <table class=\"props-table\">\n          <tr>\n            <td>variant</td>\n            <td>\n              <select-component\n                :state=\"computedVariant\"\n                @selected=\"variantChanged\"\n                :data=\"variantOptions\"\n                defaults=\"default\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>rounded</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedRounded\"\n                @toggle=\"roundedChanged\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>gradient</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedGradient\"\n                @toggle=\"gradientChanged\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>triggerAnimation()</td>\n            <td>\n              <vue-u-i-button-component\n                size=\"medium\"\n                variant=\"info\"\n                corners=\"rounded\"\n                @click=\"triggerProgressAnimation\"\n              >\n                Trigger Animation\n              </vue-u-i-button-component>\n            </td>\n          </tr>\n          <tr>\n            <td>value</td>\n            <td>\n              <input-component\n                :value=\"computedProgressValue\"\n                @change=\"progressValueChanged\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>bordered</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedBordered\"\n                @toggle=\"borderedChanged\"\n              />\n            </td>\n          </tr>\n        </table>\n      </template>\n      <template v-slot:code>\n        <prism-component\n          :code=\"code\"\n          nameOfFile=\"CircularProgressComponent.vue\"\n        />\n      </template>\n      <template v-slot:docs>\n        <table-component :headings=\"propHeadings\" :items=\"propDetails\" />\n      </template>\n    </ShowcaseComponent>\n  </div>\n</template>\n\n<script>\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport CircularProgressComponent from \"@/components/Vue-UI/CircularProgressComponent\";\nimport VueUIButtonComponent from \"@/components/Vue-UI/ButtonComponent\";\nimport InputComponent from \"@/components/Controls/InputComponent\";\nimport * as CircularProgressComponentMarkdown from \"@/assets/ComponentMarkdown/CircularProgressComponentMarkdown\";\n\nexport default {\n  components: {\n    ShowcaseComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    SelectComponent,\n    CircularProgressComponent,\n    VueUIButtonComponent,\n    InputComponent,\n  },\n  data() {\n    return {\n      progressValue: 78,\n      fontSize: \"small\",\n      rounded: true,\n      gradient: true,\n      bordered: false,\n      variant: \"\",\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      sizeOptions: [\"small\", \"medium\", \"large\"],\n      code: CircularProgressComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [\n        [\n          \"autoClose\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"If true, the accordion will automatically close previous tabs\",\n        ],\n        [\n          \"rounded\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Will round the top and bottom items giving it a rounded look\",\n        ],\n      ],\n    };\n  },\n  methods: {\n    progressValueChanged(item) {\n      if (item.target.value || item.target.value === \"\") {\n        this.progressValue = item.target.value;\n      }\n    },\n    triggerProgressAnimation() {\n      this.$refs.circulatProgress.triggerAnimation();\n    },\n    roundedChanged() {\n      this.rounded = !this.rounded;\n    },\n    variantChanged(item) {\n      this.variant = item;\n    },\n    gradientChanged() {\n      this.gradient = !this.gradient;\n    },\n    borderedChanged() {\n      this.bordered = !this.bordered;\n    },\n  },\n  computed: {\n    computedProgressValue() {\n      return this.progressValue;\n    },\n    computedRounded() {\n      return this.rounded;\n    },\n    computedVariant() {\n      return this.variant;\n    },\n    computedGradient() {\n      return this.gradient;\n    },\n    computedBordered() {\n      return this.bordered;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n.circular-progress-page {\n  padding-top: 3rem;\n\n  .props-table {\n    td {\n      padding: 0 5px;\n    }\n    .divider {\n      width: 50px;\n      height: 100%;\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: -2px;\n        transform: translateX(-50%);\n        left: 50%;\n        width: 2px;\n        height: calc(100% + 4px);\n        background: grey;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"AAgGA,OAAOA,iBAAgB,MAAO,gCAAgC;AAC9D,OAAOC,eAAc,MAAO,uCAAuC;AACnE,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAOC,eAAc,MAAO,uCAAuC;AACnE,OAAOC,yBAAwB,MAAO,+CAA+C;AACrF,OAAOC,oBAAmB,MAAO,qCAAqC;AACtE,OAAOC,cAAa,MAAO,sCAAsC;AACjE,OAAO,KAAKC,iCAAgC,MAAO,8DAA8D;AAEjH,eAAe;EACbC,UAAU,EAAE;IACVT,iBAAiB;IACjBC,eAAe;IACfC,cAAc;IACdC,cAAc;IACdC,eAAe;IACfC,yBAAyB;IACzBC,oBAAoB;IACpBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,QAAQ,EAAE,OAAO;MACjBC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;MACxDC,WAAW,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;MACzCC,IAAI,EAAEX,iCAAiC,CAACY,OAAO;MAC/CC,YAAY,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC;MACpEC,WAAW,EAAE,CACX,CACE,WAAW,EACX,SAAS,EACT,MAAM,EACN,IAAI,EACJ,+DAA+D,CAChE,EACD,CACE,SAAS,EACT,SAAS,EACT,MAAM,EACN,IAAI,EACJ,8DAA8D,CAC/D;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoBA,CAACC,IAAI,EAAE;MACzB,IAAIA,IAAI,CAACC,MAAM,CAACC,KAAI,IAAKF,IAAI,CAACC,MAAM,CAACC,KAAI,KAAM,EAAE,EAAE;QACjD,IAAI,CAAChB,aAAY,GAAIc,IAAI,CAACC,MAAM,CAACC,KAAK;MACxC;IACF,CAAC;IACDC,wBAAwBA,CAAA,EAAG;MACzB,IAAI,CAACC,KAAK,CAACC,gBAAgB,CAACC,gBAAgB,CAAC,CAAC;IAChD,CAAC;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACnB,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;IAC9B,CAAC;IACDoB,cAAcA,CAACR,IAAI,EAAE;MACnB,IAAI,CAACT,OAAM,GAAIS,IAAI;IACrB,CAAC;IACDS,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACpB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IACDqB,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACpB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC;EACF,CAAC;EACDqB,QAAQ,EAAE;IACRC,qBAAqBA,CAAA,EAAG;MACtB,OAAO,IAAI,CAAC1B,aAAa;IAC3B,CAAC;IACD2B,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACzB,OAAO;IACrB,CAAC;IACD0B,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACvB,OAAO;IACrB,CAAC;IACDwB,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAAC1B,QAAQ;IACtB,CAAC;IACD2B,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAAC1B,QAAQ;IACtB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}