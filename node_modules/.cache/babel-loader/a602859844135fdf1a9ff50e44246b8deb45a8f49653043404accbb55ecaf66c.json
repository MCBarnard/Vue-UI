{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-daaba1b0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"some content\", -1 /* HOISTED */));\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = () => {\n      $options.toggleItem(0);\n    }),\n    class: _normalizeClass(['dropdown', `${$data.rand}`, `${$data.rand}-${0}`, {\n      rounded: $props.rounded\n    }])\n  }, \" a title \", 2 /* CLASS */), _createElementVNode(\"div\", {\n    class: _normalizeClass(['panel', `${$data.rand}`, `${$data.rand}-${0}`, {\n      'rounded-bottom': $props.rounded\n    }])\n  }, _hoisted_2, 2 /* CLASS */)]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_1","_createElementBlock","onClick","_cache","$options","toggleItem","class","_normalizeClass","$data","rand","rounded","$props"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/DropdownComponent.vue"],"sourcesContent":["<template>\n  <div>\n    <button\n      @click=\"\n        () => {\n          toggleItem(0);\n        }\n      \"\n      :class=\"['dropdown', `${rand}`, `${rand}-${0}`, { rounded: rounded }]\"\n    >\n      a title\n    </button>\n    <div\n      :class=\"[\n        'panel',\n        `${rand}`,\n        `${rand}-${0}`,\n        { 'rounded-bottom': rounded },\n      ]\"\n    >\n      <p>some content</p>\n    </div>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      rand: `id-${(Math.random() + 1).toString(36).substring(2)}`,\n    };\n  },\n  props: {\n    autoClose: Boolean, // true / false\n    rounded: Boolean, // true / false\n    items: Array, // {title: \"What is the ultimate answer to life?\", content: \"The answer to the question of life\"}\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    },\n  },\n  methods: {\n    closeAllDropDowns(key) {\n      const buttons = document.querySelectorAll(`.dropdown.${this.rand}`);\n      const panels = document.querySelectorAll(`.panel.${this.rand}`);\n\n      buttons.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.classList.contains(\"active\")) {\n          item.classList.toggle(\"active\");\n        }\n      });\n\n      panels.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.style.maxHeight !== null) {\n          item.style.maxHeight = null;\n        }\n      });\n    },\n    toggleItem(item) {\n      // Close all\n      if (this.computedAutoClose) this.closeAllDropDowns(item);\n\n      // Toggle new Dropdown\n      const button = document.querySelector(`.dropdown.${this.rand}-${item}`);\n      const panel = document.querySelector(`.panel.${this.rand}-${item}`);\n\n      button.classList.toggle(\"active\");\n      this.$emit(\"toggled\", `${this.rand}-${item}`);\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n      } else {\n        panel.style.maxHeight = panel.scrollHeight + \"px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.rounded-top {\n  border-radius: 10px 10px 0 0;\n}\n.rounded-bottom {\n  border-radius: 0 0 10px 10px;\n\n  &.active {\n    border-radius: 0;\n  }\n}\n\n.dropdown {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n\n  &:after {\n    content: \"\\002B\";\n    color: #777;\n    font-weight: bold;\n    float: right;\n    margin-left: 5px;\n  }\n}\n\n.active,\n.dropdown:hover {\n  background-color: #ccc;\n}\n\n.active:after {\n  content: \"\\2212\";\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n\n  &.active.rounded-bottom {\n    border-radius: 0 0 10px 10px;\n  }\n}\n</style>\n"],"mappings":";;gEAoBMA,mBAAA,CAAmB,WAAhB,cAAY;oBAAfC,UAAmB,C;;uBAnBvBC,mBAAA,CAqBM,cApBJF,mBAAA,CASS;IARNG,OAAK,EAAAC,MAAA,QAAAA,MAAA,M;MAA6BC,QAAA,CAAAC,UAAU;;IAK5CC,KAAK,EAAAC,eAAA,iBAAkBC,KAAA,CAAAC,IAAI,OAAOD,KAAA,CAAAC,IAAI;MAAAC,OAAA,EAAoBC,MAAA,CAAAD;IAAO;KACnE,WAED,kBACAX,mBAAA,CASM;IARHO,KAAK,EAAAC,eAAA,E,YAAgCC,KAAA,CAAAC,IAAI,I,GAAeD,KAAA,CAAAC,IAAI,S;wBAAqCE,MAAA,CAAAD;IAAO,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}