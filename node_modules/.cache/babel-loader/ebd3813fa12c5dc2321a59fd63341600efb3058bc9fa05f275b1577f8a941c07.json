{"ast":null,"code":"// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      interval: setInterval(() => {}),\n      counter: 0\n    };\n  },\n  methods: {\n    animateProgress() {\n      // do stuff\n    }\n  }\n};","map":{"version":3,"names":["data","interval","setInterval","counter","methods","animateProgress"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/CircularProgressComponent.vue"],"sourcesContent":["<template>\n  <div v-for=\"(item, key) in items\" :key=\"key\">\n    <button\n      @click=\"\n        () => {\n          toggleItem(key);\n        }\n      \"\n      :class=\"[\n        'accordion',\n        `${rand}`,\n        `${rand}-${key}`,\n        { 'rounded-top': key === 0 && rounded },\n        { 'rounded-bottom': key === items.length - 1 && rounded },\n      ]\"\n    >\n      {{ item.title }}\n    </button>\n    <div\n      :class=\"[\n        'panel',\n        `${rand}`,\n        `${rand}-${key}`,\n        { 'rounded-bottom': key === items.length - 1 && rounded },\n      ]\"\n    >\n      <p>{{ item.content }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      interval: setInterval(() => {}),\n      counter: 0,\n    };\n  },\n  methods: {\n    animateProgress() {\n      // do stuff\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.rounded-top {\n  border-radius: 10px 10px 0 0;\n}\n.rounded-bottom {\n  border-radius: 0 0 10px 10px;\n\n  &.active {\n    border-radius: 0;\n  }\n}\n\n.accordion {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n\n  &:after {\n    content: \"\\002B\";\n    color: #777;\n    font-weight: bold;\n    float: right;\n    margin-left: 5px;\n  }\n}\n\n.active,\n.accordion:hover {\n  background-color: #ccc;\n}\n\n.active:after {\n  content: \"\\2212\";\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n\n  &.active.rounded-bottom {\n    border-radius: 0 0 10px 10px;\n  }\n}\n</style>\n"],"mappings":"AAgCA;AACA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAEC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;MAC/BC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAAA,EAAG;MAChB;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}