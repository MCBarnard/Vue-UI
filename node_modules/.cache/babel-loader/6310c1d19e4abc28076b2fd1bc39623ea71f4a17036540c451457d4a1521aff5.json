{"ast":null,"code":"import ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport ButtonComponent from \"@/components/Vue-UI/ButtonComponent\";\nimport * as LinkComponentMarkdown from \"@/assets/ComponentMarkdown/LinkComponentMarkdown\";\nexport default {\n  components: {\n    ShowcaseComponent,\n    SelectComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    ButtonComponent\n  },\n  data() {\n    return {\n      wide: false,\n      disabled: false,\n      variant: \"\",\n      size: \"large\",\n      corners: \"rounded\",\n      finish: \"\",\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      sizeOptions: [\"small\", \"medium\", \"large\"],\n      cornerOptions: [\"round\", \"rounded\", \"sharp\"],\n      finishOptions: [\"none\", \"outlined\"],\n      code: LinkComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [[\"variant\", \"String\", \"'' / 'info' / 'success' / 'warning' / 'danger'\", \"No\", \"This defines what flavor your button will be.\"], [\"size\", \"String\", \"'small' / 'medium' / 'large'\", \"Yes\", \"This determines how big the button will be by the amount of padding around the text\"], [\"corners\", \"String\", \"'sharp' / 'rounded' / 'round'\", \"Yes\", \"Specify the corner border radius of your button\"], [\"finish\", \"String\", \"'' / 'outlined'\", \"No\", \"This turns the button into a white/dark button with a bordered outline around and a fill on hover\"], [\"wide\", \"Boolean\", \"true\", \"No\", \"Toggles the button to be full width or not\"], [\"disabled\", \"Boolean\", \"true\", \"No\", \"Turn the button into a disabled state with slightly lighter variant shades and wont emit the click event\"]]\n    };\n  },\n  methods: {\n    variantChanged(item) {\n      this.variant = item;\n    },\n    sizeChanged(item) {\n      this.size = item;\n    },\n    handleCornersChange(item) {\n      this.corners = item;\n    },\n    finishChange(item) {\n      this.finish = item;\n    },\n    wideChange() {\n      this.wide = !this.wide;\n    },\n    disabledChange() {\n      this.disabled = !this.disabled;\n    }\n  },\n  computed: {\n    selectedVariant() {\n      return this.variant;\n    },\n    computedSize() {\n      return this.size;\n    },\n    computedCorners() {\n      return this.corners;\n    },\n    computedFinish() {\n      return this.finish;\n    },\n    computedWide() {\n      return this.wide;\n    },\n    computedDisabled() {\n      return this.disabled;\n    }\n  }\n};","map":{"version":3,"names":["ShowcaseComponent","SelectComponent","ToggleComponent","PrismComponent","TableComponent","ButtonComponent","LinkComponentMarkdown","components","data","wide","disabled","variant","size","corners","finish","variantOptions","sizeOptions","cornerOptions","finishOptions","code","default","propHeadings","propDetails","methods","variantChanged","item","sizeChanged","handleCornersChange","finishChange","wideChange","disabledChange","computed","selectedVariant","computedSize","computedCorners","computedFinish","computedWide","computedDisabled"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/views/Components/ButtonPage.vue"],"sourcesContent":["<template>\n  <div class=\"button-page\">\n    <ShowcaseComponent :wide-items=\"computedWide\">\n      <template v-slot:component>\n        <button-component\n          :variant=\"selectedVariant\"\n          :size=\"computedSize\"\n          :corners=\"computedCorners\"\n          :finish=\"computedFinish\"\n          :wide=\"computedWide\"\n          :disabled=\"computedDisabled\"\n        >\n          Button\n        </button-component>\n      </template>\n      <template v-slot:controls>\n        <table class=\"props-table\">\n          <tr>\n            <td>variant</td>\n            <td>\n              <select-component\n                @selected=\"variantChanged\"\n                :selected=\"selectedVariant\"\n                :data=\"variantOptions\"\n                defaults=\"default\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>size</td>\n            <td>\n              <select-component\n                :selected=\"computedSize\"\n                @selected=\"sizeChanged\"\n                :data=\"sizeOptions\"\n                defaults=\"default\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>corners</td>\n            <td>\n              <select-component\n                :selected=\"computedCorners\"\n                @selected=\"handleCornersChange\"\n                :data=\"cornerOptions\"\n                defaults=\"default\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>finish</td>\n            <td>\n              <select-component\n                :selected=\"computedFinish\"\n                @selected=\"finishChange\"\n                :data=\"finishOptions\"\n                defaults=\"default\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td>wide</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :selected=\"computedWide\"\n                @toggle=\"wideChange\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>disabled</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :selected=\"computedDisabled\"\n                @toggle=\"disabledChange\"\n              />\n            </td>\n          </tr>\n        </table>\n      </template>\n      <template v-slot:code>\n        <prism-component :code=\"code\" nameOfFile=\"LinkComponent.vue\" />\n      </template>\n      <template v-slot:docs>\n        <table-component :headings=\"propHeadings\" :items=\"propDetails\" />\n      </template>\n    </ShowcaseComponent>\n  </div>\n</template>\n\n<script>\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport ButtonComponent from \"@/components/Vue-UI/ButtonComponent\";\nimport * as LinkComponentMarkdown from \"@/assets/ComponentMarkdown/LinkComponentMarkdown\";\n\nexport default {\n  components: {\n    ShowcaseComponent,\n    SelectComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    ButtonComponent,\n  },\n  data() {\n    return {\n      wide: false,\n      disabled: false,\n      variant: \"\",\n      size: \"large\",\n      corners: \"rounded\",\n      finish: \"\",\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      sizeOptions: [\"small\", \"medium\", \"large\"],\n      cornerOptions: [\"round\", \"rounded\", \"sharp\"],\n      finishOptions: [\"none\", \"outlined\"],\n      code: LinkComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [\n        [\n          \"variant\",\n          \"String\",\n          \"'' / 'info' / 'success' / 'warning' / 'danger'\",\n          \"No\",\n          \"This defines what flavor your button will be.\",\n        ],\n        [\n          \"size\",\n          \"String\",\n          \"'small' / 'medium' / 'large'\",\n          \"Yes\",\n          \"This determines how big the button will be by the amount of padding around the text\",\n        ],\n        [\n          \"corners\",\n          \"String\",\n          \"'sharp' / 'rounded' / 'round'\",\n          \"Yes\",\n          \"Specify the corner border radius of your button\",\n        ],\n        [\n          \"finish\",\n          \"String\",\n          \"'' / 'outlined'\",\n          \"No\",\n          \"This turns the button into a white/dark button with a bordered outline around and a fill on hover\",\n        ],\n        [\n          \"wide\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Toggles the button to be full width or not\",\n        ],\n        [\n          \"disabled\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Turn the button into a disabled state with slightly lighter variant shades and wont emit the click event\",\n        ],\n      ],\n    };\n  },\n  methods: {\n    variantChanged(item) {\n      this.variant = item;\n    },\n    sizeChanged(item) {\n      this.size = item;\n    },\n    handleCornersChange(item) {\n      this.corners = item;\n    },\n    finishChange(item) {\n      this.finish = item;\n    },\n    wideChange() {\n      this.wide = !this.wide;\n    },\n    disabledChange() {\n      this.disabled = !this.disabled;\n    },\n  },\n  computed: {\n    selectedVariant() {\n      return this.variant;\n    },\n    computedSize() {\n      return this.size;\n    },\n    computedCorners() {\n      return this.corners;\n    },\n    computedFinish() {\n      return this.finish;\n    },\n    computedWide() {\n      return this.wide;\n    },\n    computedDisabled() {\n      return this.disabled;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n.button-page {\n  padding-top: 3rem;\n\n  .props-table {\n    td {\n      padding: 0 5px;\n    }\n    .divider {\n      width: 50px;\n      height: 100%;\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: -2px;\n        transform: translateX(-50%);\n        left: 50%;\n        width: 2px;\n        height: calc(100% + 4px);\n        background: grey;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}