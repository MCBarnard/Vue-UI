{"ast":null,"code":"import AccordionComponent from \"@/components/Vue-UI/AccordionComponent\";\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport InputComponent from \"@/components/Controls/InputComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport * as AccordionComponentMarkdown from \"@/assets/ComponentMarkdown/AccordionComponentMarkdown\";\nexport default {\n  components: {\n    ShowcaseComponent,\n    SelectComponent,\n    InputComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    AccordionComponent\n  },\n  data() {\n    return {\n      autoClose: false,\n      height: \"\",\n      value: \"\",\n      variant: \"\",\n      label: \"Your Toggle\",\n      full: false,\n      focussing: false,\n      disabled: false,\n      placeholder: \"Some Placeholder\",\n      subText: \"This usually contains validation messages\",\n      showSubText: false,\n      subTextColor: \"\",\n      type: \"\",\n      autofocus: false,\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      subTextColorOptions: [\"sub\", \"success\", \"danger\"],\n      typeOptions: [\"text\", \"date\", \"number\"],\n      widthOptions: [\"300px\", \"360px\", \"450px\"],\n      heightOptions: [\"80px\", \"150px\", \"210px\"],\n      code: AccordionComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [[\"variant\", \"String\", \"'' / 'info' / 'success' / 'warning' / 'danger'\", \"No\", \"This defines what color your input underline and label will be.\"], [\"focussing\", \"Boolean\", \"true\", \"No\", \"This triggers the underline animation below the input\"], [\"value\", \"String\", \"''\", \"yes\", \"This is the value inside the input and will be used to bind the component input to the outer component\"], [\"full\", \"Boolean\", \"true\", \"No\", \"This forces the input field to be full width\"], [\"label\", \"String\", \"'Your label'\", \"No\", \"Sets the value displayed above your input field\"], [\"placeholder\", \"String\", \"'Enter something, anything!'\", \"No\", \"Sets the placeholder value on the input\"], [\"subText\", \"String\", \"'Requires minimum of 1 character'\", \"No\", \"Displays a message below the input field, useful for validation feedback\"], [\"showSubText\", \"Boolean\", \"true\", \"No\", \"Shows or hides the subtext content\"], [\"subTextColor\", \"String\", \"'sub' / 'success' / 'danger'\", \"No\", \"Determines what color the subText should be, if not specified, we will use the variant. Danger will make the label red as well\"], [\"disabled\", \"Boolean\", \"true\", \"No\", \"Makes the input field disabled\"], [\"type\", \"String\", \"'text' / 'date' / 'number'\", \"No\", \"Determines what type of input field we have\"], [\"autofocus\", \"Boolean\", \"false\", \"No\", \"Configures the autofocus property on the input field\"], [\"height\", \"String\", \"500px\", \"No\", \"This property gets passed directly to the text area to adjust the height inline\"], [\"width\", \"String\", \"500px\", \"No\", \"This property gets passed directly to the text area to adjust the width inline\"]]\n    };\n  },\n  methods: {\n    autoCloseChanged() {\n      this.autoClose = !this.autoClose;\n    }\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    }\n  }\n};","map":{"version":3,"names":["AccordionComponent","ShowcaseComponent","SelectComponent","InputComponent","ToggleComponent","PrismComponent","TableComponent","AccordionComponentMarkdown","components","data","autoClose","height","value","variant","label","full","focussing","disabled","placeholder","subText","showSubText","subTextColor","type","autofocus","variantOptions","subTextColorOptions","typeOptions","widthOptions","heightOptions","code","default","propHeadings","propDetails","methods","autoCloseChanged","computed","computedAutoClose"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/views/Interface/AccordionPage.vue"],"sourcesContent":["<template>\n  <div class=\"textarea-page\">\n    <ShowcaseComponent :wide-items=\"computedFull\">\n      <template v-slot:component>\n        <accordion-component\n          :autoClose=\"computedAutoClose\"\n        />\n      </template>\n      <template v-slot:controls>\n        <table class=\"props-table\">\n          <tr>\n            <td>autoClose</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedAutoClose\"\n                @toggle=\"autoCloseChanged\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n          </tr>\n        </table>\n      </template>\n      <template v-slot:code>\n        <prism-component :code=\"code\" nameOfFile=\"AccordionComponent.vue\" />\n      </template>\n      <template v-slot:docs>\n        <table-component :headings=\"propHeadings\" :items=\"propDetails\" />\n      </template>\n    </ShowcaseComponent>\n  </div>\n</template>\n\n<script>\nimport AccordionComponent from \"@/components/Vue-UI/AccordionComponent\";\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport SelectComponent from \"@/components/Controls/SelectComponent\";\nimport InputComponent from \"@/components/Controls/InputComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport * as AccordionComponentMarkdown from \"@/assets/ComponentMarkdown/AccordionComponentMarkdown\";\n\nexport default {\n  components: {\n    ShowcaseComponent,\n    SelectComponent,\n    InputComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    AccordionComponent,\n  },\n  data() {\n    return {\n      autoClose: false,\n      height: \"\",\n      value: \"\",\n      variant: \"\",\n      label: \"Your Toggle\",\n      full: false,\n      focussing: false,\n      disabled: false,\n      placeholder: \"Some Placeholder\",\n      subText: \"This usually contains validation messages\",\n      showSubText: false,\n      subTextColor: \"\",\n      type: \"\",\n      autofocus: false,\n      variantOptions: [\"info\", \"success\", \"warning\", \"danger\"],\n      subTextColorOptions: [\"sub\", \"success\", \"danger\"],\n      typeOptions: [\"text\", \"date\", \"number\"],\n      widthOptions: [\"300px\", \"360px\", \"450px\"],\n      heightOptions: [\"80px\", \"150px\", \"210px\"],\n      code: AccordionComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [\n        [\n          \"variant\",\n          \"String\",\n          \"'' / 'info' / 'success' / 'warning' / 'danger'\",\n          \"No\",\n          \"This defines what color your input underline and label will be.\",\n        ],\n        [\n          \"focussing\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"This triggers the underline animation below the input\",\n        ],\n        [\n          \"value\",\n          \"String\",\n          \"''\",\n          \"yes\",\n          \"This is the value inside the input and will be used to bind the component input to the outer component\",\n        ],\n        [\n          \"full\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"This forces the input field to be full width\",\n        ],\n        [\n          \"label\",\n          \"String\",\n          \"'Your label'\",\n          \"No\",\n          \"Sets the value displayed above your input field\",\n        ],\n        [\n          \"placeholder\",\n          \"String\",\n          \"'Enter something, anything!'\",\n          \"No\",\n          \"Sets the placeholder value on the input\",\n        ],\n        [\n          \"subText\",\n          \"String\",\n          \"'Requires minimum of 1 character'\",\n          \"No\",\n          \"Displays a message below the input field, useful for validation feedback\",\n        ],\n        [\n          \"showSubText\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Shows or hides the subtext content\",\n        ],\n        [\n          \"subTextColor\",\n          \"String\",\n          \"'sub' / 'success' / 'danger'\",\n          \"No\",\n          \"Determines what color the subText should be, if not specified, we will use the variant. Danger will make the label red as well\",\n        ],\n        [\"disabled\", \"Boolean\", \"true\", \"No\", \"Makes the input field disabled\"],\n        [\n          \"type\",\n          \"String\",\n          \"'text' / 'date' / 'number'\",\n          \"No\",\n          \"Determines what type of input field we have\",\n        ],\n        [\n          \"autofocus\",\n          \"Boolean\",\n          \"false\",\n          \"No\",\n          \"Configures the autofocus property on the input field\",\n        ],\n        [\n          \"height\",\n          \"String\",\n          \"500px\",\n          \"No\",\n          \"This property gets passed directly to the text area to adjust the height inline\",\n        ],\n        [\n          \"width\",\n          \"String\",\n          \"500px\",\n          \"No\",\n          \"This property gets passed directly to the text area to adjust the width inline\",\n        ],\n      ],\n    };\n  },\n  methods: {\n    autoCloseChanged() {\n      this.autoClose = !this.autoClose;\n    },\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n.textarea-page {\n  padding-top: 3rem;\n\n  .props-table {\n    td {\n      padding: 0 5px;\n    }\n    .divider {\n      width: 50px;\n      height: 100%;\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: -2px;\n        transform: translateX(-50%);\n        left: 50%;\n        width: 2px;\n        height: calc(100% + 4px);\n        background: grey;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}