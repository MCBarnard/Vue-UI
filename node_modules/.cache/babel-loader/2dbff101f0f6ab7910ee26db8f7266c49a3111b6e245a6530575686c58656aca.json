{"ast":null,"code":"// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      interval: setInterval(() => {}),\n      counter: 0,\n      percentage: 0\n    };\n  },\n  props: {\n    variant: String,\n    // '' / info / success / warning / danger\n    rounded: Boolean,\n    // true / false\n    gradient: Boolean,\n    // true / false\n    width: String,\n    // 160px\n    height: String,\n    // 160px\n    value: Number,\n    // 78\n    bordered: Boolean,\n    // true / false\n    size: String,\n    // small, medium, large\n    bold: Boolean // true, false\n  },\n\n  computed: {\n    // --total-skill: 100;\n    // --stroke-dasharray: 329;\n    // --border-array-size: 10px;\n    // --stroke-dashoffset: 329;\n    computedMaxCap() {\n      switch (this.size) {\n        case \"small\":\n          return 25;\n        case \"medium\":\n          return 25;\n        case \"large\":\n          return 25;\n        default:\n          return 25;\n      }\n    },\n    computedDashArray() {\n      switch (this.size) {\n        case \"small\":\n          return 329;\n        case \"medium\":\n          return 155;\n        case \"large\":\n          return 155;\n        default:\n          return 440;\n      }\n    },\n    computedBorderSize() {\n      switch (this.size) {\n        case \"small\":\n          return \"10px\";\n        case \"medium\":\n          return \"10px\";\n        case \"large\":\n          return \"25px\";\n        default:\n          return \"440px\";\n      }\n    },\n    computedDashOffset() {\n      switch (this.size) {\n        case \"small\":\n          return 329;\n        case \"medium\":\n          return 130;\n        case \"large\":\n          return 130;\n        default:\n          return 440;\n      }\n    },\n    computedPercentage() {\n      return this.percentage < 100 ? this.percentage : 100;\n    },\n    capShape() {\n      return this.rounded ? \"round\" : \"square\";\n    },\n    computedStartColor() {\n      if (this.gradient && !this.variant) {\n        return \"#f900ff\";\n      } else if (!this.gradient && !this.variant) {\n        return \"#ce00ff\";\n      } else if (!this.gradient && this.variant === \"info\") {\n        return \"#218afa\";\n      } else if (this.gradient && this.variant === \"info\") {\n        return \"#00a6eb\";\n      } else if (!this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (this.gradient && this.variant === \"success\") {\n        return \"#00ff19\";\n      } else if (!this.gradient && this.variant === \"warning\") {\n        return \"#ff6300\";\n      } else if (this.gradient && this.variant === \"warning\") {\n        return \"#ff9d00\";\n      } else if (!this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      } else if (this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      }\n      return \"#a900ff\";\n    },\n    computedEndColor() {\n      if (this.gradient && !this.variant) {\n        return \"#673ab7\";\n      } else if (!this.gradient && !this.variant) {\n        return \"#ce00ff\";\n      } else if (!this.gradient && this.variant === \"info\") {\n        return \"#218afa\";\n      } else if (this.gradient && this.variant === \"info\") {\n        return \"#1046cf\";\n      } else if (!this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (!this.gradient && this.variant === \"warning\") {\n        return \"#ff6300\";\n      } else if (this.gradient && this.variant === \"warning\") {\n        return \"#e20404\";\n      } else if (!this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      } else if (this.gradient && this.variant === \"danger\") {\n        return \"#aa0625\";\n      }\n      return \"#a900ff\";\n    },\n    animationOffset() {\n      return this.computedDashArray - this.computedDashOffset * (this.computedPercentage / 100);\n    }\n  },\n  methods: {\n    triggerAnimation() {\n      setTimeout(() => {\n        this.animateProgress(this.value);\n      }, 100);\n    },\n    animateProgress(total) {\n      this.percentage = total;\n      clearInterval(this.interval);\n      this.interval = setInterval(() => {\n        if (this.counter > this.computedPercentage) {\n          this.counter--;\n        } else if (this.counter < this.computedPercentage) {\n          this.counter++;\n        } else {\n          clearInterval(this.interval);\n        }\n        if (this.counter > 100) clearInterval(this.interval);\n      }, 20);\n    }\n  },\n  watch: {\n    value() {\n      this.triggerAnimation();\n    }\n  }\n};","map":{"version":3,"names":["data","interval","setInterval","counter","percentage","props","variant","String","rounded","Boolean","gradient","width","height","value","Number","bordered","size","bold","computed","computedMaxCap","computedDashArray","computedBorderSize","computedDashOffset","computedPercentage","capShape","computedStartColor","computedEndColor","animationOffset","methods","triggerAnimation","setTimeout","animateProgress","total","clearInterval","watch"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/CircularProgressComponent.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"['skill', { bordered }]\"\n    :style=\"`--total-skill: ${computedPercentage};--stroke-dasharray: ${computedDashArray};--border-array-size: ${computedBorderSize};--stroke-dashoffset:${animationOffset}`\"\n  >\n    <div class=\"outer\">\n      <div class=\"inner\">\n        <div id=\"number\" :class=\"[{ bold }, size]\">{{ counter }}</div>\n      </div>\n    </div>\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      :width=\"width\"\n      :height=\"height\"\n    >\n      <defs>\n        <linearGradient id=\"GradientColor\">\n          <stop offset=\"0%\" :stop-color=\"computedStartColor\" />\n          <stop offset=\"100%\" :stop-color=\"computedEndColor\" />\n        </linearGradient>\n      </defs>\n      <circle cx=\"60\" cy=\"60\" :r=\"computedMaxCap\" :stroke-linecap=\"capShape\" />\n      <!-- <circle v-if=\"size='small'\" cx=\"80\" cy=\"80\" r=\"70\" :stroke-linecap=\"capShape\" />\n      <circle v-if=\"size='small'\" cx=\"80\" cy=\"80\" r=\"70\" :stroke-linecap=\"capShape\" />\n      <circle v-if=\"size='small'\" cx=\"80\" cy=\"80\" r=\"70\" :stroke-linecap=\"capShape\" /> -->\n    </svg>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      interval: setInterval(() => {}),\n      counter: 0,\n      percentage: 0,\n    };\n  },\n  props: {\n    variant: String, // '' / info / success / warning / danger\n    rounded: Boolean, // true / false\n    gradient: Boolean, // true / false\n    width: String, // 160px\n    height: String, // 160px\n    value: Number, // 78\n    bordered: Boolean, // true / false\n    size: String, // small, medium, large\n    bold: Boolean, // true, false\n  },\n  computed: {\n    // --total-skill: 100;\n    // --stroke-dasharray: 329;\n    // --border-array-size: 10px;\n    // --stroke-dashoffset: 329;\n    computedMaxCap() {\n      switch (this.size) {\n        case \"small\":\n          return 25;\n        case \"medium\":\n          return 25;\n        case \"large\":\n          return 25;\n        default:\n          return 25;\n      }\n    },\n    computedDashArray() {\n      switch (this.size) {\n        case \"small\":\n          return 329;\n        case \"medium\":\n          return 155;\n        case \"large\":\n          return 155;\n        default:\n          return 440;\n      }\n    },\n    computedBorderSize() {\n      switch (this.size) {\n        case \"small\":\n          return \"10px\";\n        case \"medium\":\n          return \"10px\";\n        case \"large\":\n          return \"25px\";\n        default:\n          return \"440px\";\n      }\n    },\n    computedDashOffset() {\n      switch (this.size) {\n        case \"small\":\n          return 329;\n        case \"medium\":\n          return 130;\n        case \"large\":\n          return 130;\n        default:\n          return 440;\n      }\n    },\n    computedPercentage() {\n      return this.percentage < 100 ? this.percentage : 100;\n    },\n    capShape() {\n      return this.rounded ? \"round\" : \"square\";\n    },\n    computedStartColor() {\n      if (this.gradient && !this.variant) {\n        return \"#f900ff\";\n      } else if (!this.gradient && !this.variant) {\n        return \"#ce00ff\";\n      } else if (!this.gradient && this.variant === \"info\") {\n        return \"#218afa\";\n      } else if (this.gradient && this.variant === \"info\") {\n        return \"#00a6eb\";\n      } else if (!this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (this.gradient && this.variant === \"success\") {\n        return \"#00ff19\";\n      } else if (!this.gradient && this.variant === \"warning\") {\n        return \"#ff6300\";\n      } else if (this.gradient && this.variant === \"warning\") {\n        return \"#ff9d00\";\n      } else if (!this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      } else if (this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      }\n      return \"#a900ff\";\n    },\n    computedEndColor() {\n      if (this.gradient && !this.variant) {\n        return \"#673ab7\";\n      } else if (!this.gradient && !this.variant) {\n        return \"#ce00ff\";\n      } else if (!this.gradient && this.variant === \"info\") {\n        return \"#218afa\";\n      } else if (this.gradient && this.variant === \"info\") {\n        return \"#1046cf\";\n      } else if (!this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (this.gradient && this.variant === \"success\") {\n        return \"#00b014\";\n      } else if (!this.gradient && this.variant === \"warning\") {\n        return \"#ff6300\";\n      } else if (this.gradient && this.variant === \"warning\") {\n        return \"#e20404\";\n      } else if (!this.gradient && this.variant === \"danger\") {\n        return \"#ff0000\";\n      } else if (this.gradient && this.variant === \"danger\") {\n        return \"#aa0625\";\n      }\n      return \"#a900ff\";\n    },\n    animationOffset() {\n      return (\n        this.computedDashArray -\n        this.computedDashOffset * (this.computedPercentage / 100)\n      );\n    },\n  },\n  methods: {\n    triggerAnimation() {\n      setTimeout(() => {\n        this.animateProgress(this.value);\n      }, 100);\n    },\n    animateProgress(total) {\n      this.percentage = total;\n      clearInterval(this.interval);\n      this.interval = setInterval(() => {\n        if (this.counter > this.computedPercentage) {\n          this.counter--;\n        } else if (this.counter < this.computedPercentage) {\n          this.counter++;\n        } else {\n          clearInterval(this.interval);\n        }\n        if (this.counter > 100) clearInterval(this.interval);\n      }, 20);\n    },\n  },\n  watch: {\n    value() {\n      this.triggerAnimation();\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.skill {\n  width: 160px;\n  height: 160px;\n  border-radius: 50%;\n  position: relative;\n\n  &.bordered {\n    border: 1px solid #f1f1f1;\n  }\n}\n\n.outer {\n  height: 160px;\n  width: 160px;\n  border-radius: 50%;\n  padding: 20px;\n  position: relative;\n}\n\n.inner {\n  height: 120px;\n  width: 120px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n}\n\n#number {\n  color: #555;\n\n  &.bold {\n    font-weight: bold;\n  }\n\n  &.small {\n    font-size: 12px;\n  }\n\n  &.medium {\n    font-size: 16px;\n  }\n\n  &.large {\n    font-size: 20px;\n  }\n}\n\ncircle {\n  fill: none;\n  stroke: url(#GradientColor);\n  stroke-width: var(--border-array-size);\n  stroke-dasharray: var(--stroke-dasharray);\n  stroke-dashoffset: var(--stroke-dashoffset);\n  transition: all 2s;\n}\n\nsvg {\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: all 2s;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}