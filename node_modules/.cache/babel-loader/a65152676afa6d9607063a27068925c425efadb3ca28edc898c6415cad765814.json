{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b69e72ee\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, (item, key) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: key\n    }, [_createElementVNode(\"button\", {\n      onClick: () => {\n        $options.toggleItem(key);\n      },\n      class: _normalizeClass(['accordion', `${$data.rand}`, `${$data.rand}-${key}`])\n    }, _toDisplayString(item.title), 11 /* TEXT, CLASS, PROPS */, _hoisted_1), _createElementVNode(\"div\", {\n      class: _normalizeClass(['panel', `${$data.rand}`, `${$data.rand}-${key}`])\n    }, [_createElementVNode(\"p\", null, _toDisplayString(item.content), 1 /* TEXT */)], 2 /* CLASS */)]);\n  }), 128 /* KEYED_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","items","item","key","_createElementVNode","onClick","$options","toggleItem","class","_normalizeClass","rand","title","_hoisted_1","_toDisplayString","content"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/AccordionComponent.vue"],"sourcesContent":["<template>\n  <div v-for=\"(item, key) in items\" :key=\"key\">\n    <button\n      @click=\"\n        () => {\n          toggleItem(key);\n        }\n      \"\n      :class=\"['accordion', `${rand}`, `${rand}-${key}`]\"\n    >\n      {{ item.title }}\n    </button>\n    <div :class=\"['panel', `${rand}`, `${rand}-${key}`]\">\n      <p>{{ item.content }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      autoClose: true, // true / false\n      rand: `id-${(Math.random() + 1).toString(36).substring(2)}`,\n      items: [\n        {\n          title: \"Section 1\",\n          content:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        },\n        {\n          title: \"Section 2\",\n          content:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        },\n      ],\n    };\n  },\n  methods: {\n    closeAllDropDowns(key) {\n      const buttons = document.querySelectorAll(`.accordion.${this.rand}`);\n      const panels = document.querySelectorAll(`.panel.${this.rand}`);\n\n      buttons.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.classList.contains(\"active\")) {\n          item.classList.toggle(\"active\");\n        }\n      });\n\n      panels.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.style.maxHeight !== null) {\n          item.style.maxHeight = null;\n        }\n      });\n    },\n    toggleItem(item) {\n      // Close all\n      if (this.autoClose) this.closeAllDropDowns(item);\n\n      // Toggle new Dropdown\n      const button = document.querySelector(`.accordion.${this.rand}-${item}`);\n      const panel = document.querySelector(`.panel.${this.rand}-${item}`);\n\n      button.classList.toggle(\"active\");\n      this.$emit(\"toggled\", `${this.rand}-${item}`);\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n      } else {\n        panel.style.maxHeight = panel.scrollHeight + \"px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n\n.accordion {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n\n  &:after {\n    content: \"\\002B\";\n    color: #777;\n    font-weight: bold;\n    float: right;\n    margin-left: 5px;\n  }\n}\n\n.active,\n.accordion:hover {\n  background-color: #ccc;\n}\n\n.active:after {\n  content: \"\\2212\";\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n</style>\n"],"mappings":";;;;2BACEA,mBAAA,CAcMC,SAAA,QAAAC,WAAA,CAdqBC,KAAA,CAAAC,KAAK,GAAnBC,IAAI,EAAEC,GAAG;yBAAtBN,mBAAA,CAcM;MAd6BM,GAAG,EAAEA;IAAG,IACzCC,mBAAA,CASS;MARNC,OAAK,E;QAA6BC,QAAA,CAAAC,UAAU,CAACJ,GAAG;;MAKhDK,KAAK,EAAAC,eAAA,kBAAmBT,KAAA,CAAAU,IAAI,OAAOV,KAAA,CAAAU,IAAI,IAAIP,GAAG;wBAE5CD,IAAI,CAACS,KAAK,gCAAAC,UAAA,GAEfR,mBAAA,CAEM;MAFAI,KAAK,EAAAC,eAAA,cAAeT,KAAA,CAAAU,IAAI,OAAOV,KAAA,CAAAU,IAAI,IAAIP,GAAG;QAC9CC,mBAAA,CAAyB,WAAAS,gBAAA,CAAnBX,IAAI,CAACY,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}