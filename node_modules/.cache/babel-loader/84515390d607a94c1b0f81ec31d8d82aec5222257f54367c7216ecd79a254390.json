{"ast":null,"code":"// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      rand: `id-${(Math.random() + 1).toString(36).substring(2)}`,\n      items: [{\n        title: \"Section 1\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n      }, {\n        title: \"Section 2\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n      }]\n    };\n  },\n  props: {\n    autoClose: Boolean,\n    // true / false\n    items: Array // {title: \"What is the ultimate answer to life?\", content: \"The answer to the question of life\"}\n  },\n\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    }\n  },\n  methods: {\n    closeAllDropDowns(key) {\n      const buttons = document.querySelectorAll(`.accordion.${this.rand}`);\n      const panels = document.querySelectorAll(`.panel.${this.rand}`);\n      buttons.forEach(item => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.classList.contains(\"active\")) {\n          item.classList.toggle(\"active\");\n        }\n      });\n      panels.forEach(item => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.style.maxHeight !== null) {\n          item.style.maxHeight = null;\n        }\n      });\n    },\n    toggleItem(item) {\n      // Close all\n      if (this.computedAutoClose) this.closeAllDropDowns(item);\n\n      // Toggle new Dropdown\n      const button = document.querySelector(`.accordion.${this.rand}-${item}`);\n      const panel = document.querySelector(`.panel.${this.rand}-${item}`);\n      button.classList.toggle(\"active\");\n      this.$emit(\"toggled\", `${this.rand}-${item}`);\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n      } else {\n        panel.style.maxHeight = panel.scrollHeight + \"px\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","rand","Math","random","toString","substring","items","title","content","props","autoClose","Boolean","Array","computed","computedAutoClose","methods","closeAllDropDowns","key","buttons","document","querySelectorAll","panels","forEach","item","classList","contains","toggle","style","maxHeight","toggleItem","button","querySelector","panel","$emit","scrollHeight"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/components/Vue-UI/AccordionComponent.vue"],"sourcesContent":["<template>\n  <div v-for=\"(item, key) in items\" :key=\"key\">\n    <button\n      @click=\"\n        () => {\n          toggleItem(key);\n        }\n      \"\n      :class=\"['accordion', `${rand}`, `${rand}-${key}`]\"\n    >\n      {{ item.title }}\n    </button>\n    <div :class=\"['panel', `${rand}`, `${rand}-${key}`]\">\n      <p>{{ item.content }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n// move data values into props to make this component re- usable\nexport default {\n  data() {\n    return {\n      rand: `id-${(Math.random() + 1).toString(36).substring(2)}`,\n      items: [\n        {\n          title: \"Section 1\",\n          content:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        },\n        {\n          title: \"Section 2\",\n          content:\n            \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\",\n        },\n      ],\n    };\n  },\n  props: {\n    autoClose: Boolean, // true / false\n    items: Array, // {title: \"What is the ultimate answer to life?\", content: \"The answer to the question of life\"}\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    },\n  },\n  methods: {\n    closeAllDropDowns(key) {\n      const buttons = document.querySelectorAll(`.accordion.${this.rand}`);\n      const panels = document.querySelectorAll(`.panel.${this.rand}`);\n\n      buttons.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.classList.contains(\"active\")) {\n          item.classList.toggle(\"active\");\n        }\n      });\n\n      panels.forEach((item) => {\n        // Do not close the currently clicked item if it is clicked again\n        if (item.classList.contains(`${this.rand}-${key}`)) {\n          return false;\n        }\n        if (item.style.maxHeight !== null) {\n          item.style.maxHeight = null;\n        }\n      });\n    },\n    toggleItem(item) {\n      // Close all\n      if (this.computedAutoClose) this.closeAllDropDowns(item);\n\n      // Toggle new Dropdown\n      const button = document.querySelector(`.accordion.${this.rand}-${item}`);\n      const panel = document.querySelector(`.panel.${this.rand}-${item}`);\n\n      button.classList.toggle(\"active\");\n      this.$emit(\"toggled\", `${this.rand}-${item}`);\n      if (panel.style.maxHeight) {\n        panel.style.maxHeight = null;\n      } else {\n        panel.style.maxHeight = panel.scrollHeight + \"px\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.accordion {\n  background-color: #eee;\n  color: #444;\n  cursor: pointer;\n  padding: 18px;\n  width: 100%;\n  border: none;\n  text-align: left;\n  outline: none;\n  font-size: 15px;\n  transition: 0.4s;\n\n  &:after {\n    content: \"\\002B\";\n    color: #777;\n    font-weight: bold;\n    float: right;\n    margin-left: 5px;\n  }\n}\n\n.active,\n.accordion:hover {\n  background-color: #ccc;\n}\n\n.active:after {\n  content: \"\\2212\";\n}\n\n.panel {\n  padding: 0 18px;\n  background-color: white;\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.2s ease-out;\n}\n</style>\n"],"mappings":"AAmBA;AACA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAG,MAAK,CAACC,IAAI,CAACC,MAAM,CAAC,IAAI,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAE,EAAC;MAC3DC,KAAK,EAAE,CACL;QACEC,KAAK,EAAE,WAAW;QAClBC,OAAO,EACL;MACJ,CAAC,EACD;QACED,KAAK,EAAE,WAAW;QAClBC,OAAO,EACL;MACJ,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACLC,SAAS,EAAEC,OAAO;IAAE;IACpBL,KAAK,EAAEM,KAAK,CAAE;EAChB,CAAC;;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACJ,SAAS;IACvB;EACF,CAAC;EACDK,OAAO,EAAE;IACPC,iBAAiBA,CAACC,GAAG,EAAE;MACrB,MAAMC,OAAM,GAAIC,QAAQ,CAACC,gBAAgB,CAAE,cAAa,IAAI,CAACnB,IAAK,EAAC,CAAC;MACpE,MAAMoB,MAAK,GAAIF,QAAQ,CAACC,gBAAgB,CAAE,UAAS,IAAI,CAACnB,IAAK,EAAC,CAAC;MAE/DiB,OAAO,CAACI,OAAO,CAAEC,IAAI,IAAK;QACxB;QACA,IAAIA,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAE,GAAE,IAAI,CAACxB,IAAK,IAAGgB,GAAI,EAAC,CAAC,EAAE;UAClD,OAAO,KAAK;QACd;QACA,IAAIM,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,QAAQ,CAAC,EAAE;UACrCF,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;QACjC;MACF,CAAC,CAAC;MAEFL,MAAM,CAACC,OAAO,CAAEC,IAAI,IAAK;QACvB;QACA,IAAIA,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAE,GAAE,IAAI,CAACxB,IAAK,IAAGgB,GAAI,EAAC,CAAC,EAAE;UAClD,OAAO,KAAK;QACd;QACA,IAAIM,IAAI,CAACI,KAAK,CAACC,SAAQ,KAAM,IAAI,EAAE;UACjCL,IAAI,CAACI,KAAK,CAACC,SAAQ,GAAI,IAAI;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAACN,IAAI,EAAE;MACf;MACA,IAAI,IAAI,CAACT,iBAAiB,EAAE,IAAI,CAACE,iBAAiB,CAACO,IAAI,CAAC;;MAExD;MACA,MAAMO,MAAK,GAAIX,QAAQ,CAACY,aAAa,CAAE,cAAa,IAAI,CAAC9B,IAAK,IAAGsB,IAAK,EAAC,CAAC;MACxE,MAAMS,KAAI,GAAIb,QAAQ,CAACY,aAAa,CAAE,UAAS,IAAI,CAAC9B,IAAK,IAAGsB,IAAK,EAAC,CAAC;MAEnEO,MAAM,CAACN,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;MACjC,IAAI,CAACO,KAAK,CAAC,SAAS,EAAG,GAAE,IAAI,CAAChC,IAAK,IAAGsB,IAAK,EAAC,CAAC;MAC7C,IAAIS,KAAK,CAACL,KAAK,CAACC,SAAS,EAAE;QACzBI,KAAK,CAACL,KAAK,CAACC,SAAQ,GAAI,IAAI;MAC9B,OAAO;QACLI,KAAK,CAACL,KAAK,CAACC,SAAQ,GAAII,KAAK,CAACE,YAAW,GAAI,IAAI;MACnD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}