{"ast":null,"code":"import AccordionComponent from \"@/components/Vue-UI/AccordionComponent\";\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport TextAreaComponent from \"@/components/Vue-UI/TextAreaComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport * as AccordionComponentMarkdown from \"@/assets/ComponentMarkdown/AccordionComponentMarkdown\";\nexport default {\n  components: {\n    ShowcaseComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    AccordionComponent,\n    TextAreaComponent\n  },\n  data() {\n    return {\n      focusTextArea: false,\n      autoClose: false,\n      rounded: false,\n      items: [{\n        title: \"What is the answer to life, the universe and everything?\",\n        content: \"42\"\n      }, {\n        title: \" How do you catch a squirrel?\",\n        content: \"Climb a tree and act like a nut!\"\n      }, {\n        title: \"What do you call a snowman with a six-pack?\",\n        content: \"An abdominal snowman!\"\n      }],\n      code: AccordionComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [[\"autoClose\", \"Boolean\", \"true\", \"No\", \"If true, the accordion will automatically close previous tabs\"], [\"rounded\", \"Boolean\", \"true\", \"No\", \"Will round the top and bottom items giving it a rounded look\"], [\"items\", \"Array\", \"[{title: 'Some question', content: 'some answer'}]\", \"Yes\", \"The content of your accordion\"]]\n    };\n  },\n  methods: {\n    autoCloseChanged() {\n      this.autoClose = !this.autoClose;\n    },\n    roundedChanged() {\n      this.rounded = !this.rounded;\n    }\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    },\n    computedRounded() {\n      return this.rounded;\n    }\n  }\n};","map":{"version":3,"names":["AccordionComponent","ShowcaseComponent","ToggleComponent","TextAreaComponent","PrismComponent","TableComponent","AccordionComponentMarkdown","components","data","focusTextArea","autoClose","rounded","items","title","content","code","default","propHeadings","propDetails","methods","autoCloseChanged","roundedChanged","computed","computedAutoClose","computedRounded"],"sources":["/Users/thinusbarnard/Desktop/Personal Projects/vue-ui-library/src/views/Interface/AccordionPage.vue"],"sourcesContent":["<template>\n  <div class=\"accorion-page\">\n    <ShowcaseComponent :wide-items=\"true\">\n      <template v-slot:component>\n        <accordion-component\n          :rounded=\"computedRounded\"\n          :autoClose=\"computedAutoClose\"\n          :items=\"items\"\n        />\n      </template>\n      <template v-slot:controls>\n        <table class=\"props-table\">\n          <tr>\n            <td>autoClose</td>\n            <td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedAutoClose\"\n                @toggle=\"autoCloseChanged\"\n              />\n            </td>\n            <td class=\"divider\"></td>\n            <td>rounded</td>\n              <toggle-component\n                size=\"small\"\n                variant=\"info\"\n                :state=\"computedRounded\"\n                @toggle=\"roundedChanged\"\n              />\n          </tr>\n          <tr>\n            <td>items</td>\n            <td>\n              <text-area-component\n                :value=\"JSON.stringify(items)\"\n                variant=\"info\"\n                full\n                :focussing=\"focusTextArea\"\n                @focus=\"focusTextArea = true\"\n                @blur=\"focusTextArea = false\"\n              />\n            </td>\n          </tr>\n        </table>\n      </template>\n      <template v-slot:code>\n        <prism-component :code=\"code\" nameOfFile=\"AccordionComponent.vue\" />\n      </template>\n      <template v-slot:docs>\n        <table-component :headings=\"propHeadings\" :items=\"propDetails\" />\n      </template>\n    </ShowcaseComponent>\n  </div>\n</template>\n\n<script>\nimport AccordionComponent from \"@/components/Vue-UI/AccordionComponent\";\nimport ShowcaseComponent from \"@/components/ShowcaseComponent\";\nimport ToggleComponent from \"@/components/Controls/ToggleComponent\";\nimport TextAreaComponent from \"@/components/Vue-UI/TextAreaComponent\";\nimport PrismComponent from \"@/components/PrismComponent\";\nimport TableComponent from \"@/components/TableComponent\";\nimport * as AccordionComponentMarkdown from \"@/assets/ComponentMarkdown/AccordionComponentMarkdown\";\n\nexport default {\n  components: {\n    ShowcaseComponent,\n    ToggleComponent,\n    PrismComponent,\n    TableComponent,\n    AccordionComponent,\n    TextAreaComponent,\n  },\n  data() {\n    return {\n      focusTextArea: false,\n      autoClose: false,\n      rounded: false,\n      items: [\n        {\n          title: \"What is the answer to life, the universe and everything?\",\n          content: \"42\",\n        },\n        {\n          title: \" How do you catch a squirrel?\",\n          content: \"Climb a tree and act like a nut!\",\n        },\n        {\n          title: \"What do you call a snowman with a six-pack?\",\n          content: \"An abdominal snowman!\",\n        },\n      ],\n      code: AccordionComponentMarkdown.default,\n      propHeadings: [\"Prop\", \"Type\", \"Example\", \"Required\", \"Description\"],\n      propDetails: [\n        [\n          \"autoClose\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"If true, the accordion will automatically close previous tabs\",\n        ],\n        [\n          \"rounded\",\n          \"Boolean\",\n          \"true\",\n          \"No\",\n          \"Will round the top and bottom items giving it a rounded look\",\n        ],\n        [\n          \"items\",\n          \"Array\",\n          \"[{title: 'Some question', content: 'some answer'}]\",\n          \"Yes\",\n          \"The content of your accordion\",\n        ],\n      ],\n    };\n  },\n  methods: {\n    autoCloseChanged() {\n      this.autoClose = !this.autoClose;\n    },\n    roundedChanged() {\n      this.rounded = !this.rounded;\n    },\n  },\n  computed: {\n    computedAutoClose() {\n      return this.autoClose;\n    },\n    computedRounded() {\n      return this.rounded;\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n* {\n  box-sizing: border-box;\n}\n\n.accorion-page {\n  padding-top: 3rem;\n\n  .props-table {\n    td {\n      padding: 0 5px;\n    }\n    .divider {\n      width: 50px;\n      height: 100%;\n      position: relative;\n\n      &:after {\n        content: \"\";\n        position: absolute;\n        top: -2px;\n        transform: translateX(-50%);\n        left: 50%;\n        width: 2px;\n        height: calc(100% + 4px);\n        background: grey;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"AAyDA,OAAOA,kBAAiB,MAAO,wCAAwC;AACvE,OAAOC,iBAAgB,MAAO,gCAAgC;AAC9D,OAAOC,eAAc,MAAO,uCAAuC;AACnE,OAAOC,iBAAgB,MAAO,uCAAuC;AACrE,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAOC,cAAa,MAAO,6BAA6B;AACxD,OAAO,KAAKC,0BAAyB,MAAO,uDAAuD;AAEnG,eAAe;EACbC,UAAU,EAAE;IACVN,iBAAiB;IACjBC,eAAe;IACfE,cAAc;IACdC,cAAc;IACdL,kBAAkB;IAClBG;EACF,CAAC;EACDK,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,KAAK;MACpBC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,CACL;QACEC,KAAK,EAAE,0DAA0D;QACjEC,OAAO,EAAE;MACX,CAAC,EACD;QACED,KAAK,EAAE,+BAA+B;QACtCC,OAAO,EAAE;MACX,CAAC,EACD;QACED,KAAK,EAAE,6CAA6C;QACpDC,OAAO,EAAE;MACX,CAAC,CACF;MACDC,IAAI,EAAET,0BAA0B,CAACU,OAAO;MACxCC,YAAY,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,aAAa,CAAC;MACpEC,WAAW,EAAE,CACX,CACE,WAAW,EACX,SAAS,EACT,MAAM,EACN,IAAI,EACJ,+DAA+D,CAChE,EACD,CACE,SAAS,EACT,SAAS,EACT,MAAM,EACN,IAAI,EACJ,8DAA8D,CAC/D,EACD,CACE,OAAO,EACP,OAAO,EACP,oDAAoD,EACpD,KAAK,EACL,+BAA+B,CAChC;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACV,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;IAClC,CAAC;IACDW,cAAcA,CAAA,EAAG;MACf,IAAI,CAACV,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;IAC9B;EACF,CAAC;EACDW,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACb,SAAS;IACvB,CAAC;IACDc,eAAeA,CAAA,EAAG;MAChB,OAAO,IAAI,CAACb,OAAO;IACrB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}